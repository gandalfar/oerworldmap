ErrorDocument 401 "<h1>Not allowed</h1><p>Sign up or reset password <a href=/user/register>here</a>.</p>"

OIDCProviderMetadataURL ${PUBLIC_SCHEME}://${PUBLIC_HOST}/auth/realms/oerworldmap/.well-known/openid-configuration
OIDCRedirectURI ${PUBLIC_SCHEME}://${PUBLIC_HOST}/oauth2callback
OIDCCryptoPassphrase ${OIDC_CRYPTO_PASSPHRASE}
OIDCClientID ${OIDC_CLIENT_ID}
OIDCClientSecret ${OIDC_CLIENT_SECRET}
OIDCProviderTokenEndpointAuth client_secret_basic
OIDCRemoteUserClaim email
OIDCScope "openid email"

<Location />
  AuthType openid-connect
  Require all granted
</Location>

<Location /oauth2callback>
  Require valid-user
</Location>

RewriteEngine On
RewriteMap unescape int:unescape
RewriteCond %{REQUEST_URI}  ^/.loggedIn$
RewriteCond %{QUERY_STRING} ^continue=(.*)$
RewriteRule ^/?.loggedIn$ ${unescape:%1} [R=302,L,QSD,NE]

RewriteCond %{REQUEST_URI}  ^/.loggedIn$
RewriteRule ^/?.loggedIn$ / [R=302,L,QSD,NE]

<Location /.login>
  Require valid-user
  Redirect "/.login" "/.loggedIn"
</Location>

RewriteCond %{REQUEST_URI}  ^/.logout
RewriteCond %{QUERY_STRING} ^continue=(.*)$
RewriteRule ^/?.logout /oauth2callback?logout=%1 [R=302,L,QSD,NE]

RewriteCond %{REQUEST_URI}  ^/.logout
RewriteRule ^/?.logout /oauth2callback?logout=${PUBLIC_SCHEME}://${PUBLIC_HOST}/resource/ [R=302,L,QSD,NE]

<Location /resource/>
  <LimitExcept GET DELETE>
    Require valid-user
    Require group admin
  </LimitExcept>
  <Limit DELETE>
    Require group admin
  </Limit>
</Location>

<Location /resource/*/comment>
  Require valid-user
</Location>

<Location /resource/*/like>
  Require valid-user
</Location>

<Location /log/>
  Require group editor
  Require group admin
</Location>

<Location /record/>
  Require group admin
</Location>

<Location /import/>
  Require group admin
</Location>

<Location /index/>
  Require group admin
</Location>

<Location /user/groups>
  Require group admin
</Location>

<Location /sparql/>
  Require group admin
</Location>

<Location /user/password>
  Require valid-user
</Location>

<Location /user/password/reset>
  Require all granted
</Location>

<Location /user/profile>
  Require valid-user
</Location>
